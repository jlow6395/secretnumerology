"use client"

import React, { useState } from 'react'
import { useRouter } from 'next/navigation'
import { useAuth } from '@/lib/AuthContext'
import { AppleCard } from '@/design-system/AppleCard'
import { AppleButton } from '@/design-system/AppleButton'
import { NumerologyIcons } from '@/design-system/icons/NumerologyIcons'
import { 
  calculateLifePathNumber, 
  calculateTalentNumber, 
  calculateSunNumber,
  calculateExpressionNumber,
  calculatePersonalityNumber,
  calculateHeartDesireNumber,
  calculatePersonalYear
} from '@/lib/numerology/core'

// Report types
const REPORT_TYPES = {
  basic: {
    name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
    description: '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô 5 ‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å',
    price: '‡∏ü‡∏£‡∏µ',
    features: [
      'Life Path Number',
      'Talent Number', 
      'Sun Number',
      '‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
      '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å'
    ],
    color: '#10B981',
    icon: 'üìä'
  },
  premium: {
    name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°',
    description: '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô 14 ‡∏™‡∏π‡∏ï‡∏£',
    price: '‡∏ø299',
    features: [
      '‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ñ‡∏£‡∏ö 14 ‡∏™‡∏π‡∏ï‡∏£',
      '‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å',
      '‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏õ‡∏µ',
      '‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏µ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
      '‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
      '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
      '‡πÄ‡∏•‡∏Ç‡∏ô‡∏≥‡πÇ‡∏ä‡∏Ñ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô',
      'PDF ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ'
    ],
    color: '#F59E0B',
    icon: '‚≠ê'
  },
  vip: {
    name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô VIP',
    description: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÅ‡∏ö‡∏ö 1:1 ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç',
    price: '‡∏ø999',
    features: [
      '‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏û‡πá‡∏Ñ‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°',
      '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤ 1:1 ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç',
      '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
      '‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß',
      '‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ú‡∏• 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
      '‡∏¢‡∏±‡∏ô‡∏ï‡πå‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏î‡∏ß‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
      '‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î',
      '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© 20+ ‡∏´‡∏ô‡πâ‡∏≤'
    ],
    color: '#8B5CF6',
    icon: 'üëë'
  }
}

export default function ReportsPage() {
  const router = useRouter()
  const { activeProfile } = useAuth()
  const [selectedReport, setSelectedReport] = useState<string | null>(null)
  const [showPreview, setShowPreview] = useState(false)
  const [isGenerating, setIsGenerating] = useState(false)

  // Demo data if no profile
  const demoProfile = {
    name: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
    birthDate: '1990-05-15',
    fullName: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ'
  }

  const currentProfile = activeProfile || demoProfile

  // Generate sample report data
  const generateReportData = () => {
    const lifePath = calculateLifePathNumber(currentProfile.birthDate)
    const talent = calculateTalentNumber(currentProfile.birthDate)
    const sunNumber = calculateSunNumber(currentProfile.birthDate)
    const expression = calculateExpressionNumber(currentProfile.name)
    const personality = calculatePersonalityNumber(currentProfile.name)
    const heartDesire = calculateHeartDesireNumber(currentProfile.name)
    const personalYear = calculatePersonalYear(currentProfile.birthDate, new Date().getFullYear())

    return {
      lifePath,
      talent,
      sunNumber,
      expression,
      personality,
      heartDesire,
      personalYear,
      compatibility: Math.floor(Math.random() * 30) + 70, // 70-100%
      luckyNumbers: [lifePath, sunNumber, personalYear],
      challenges: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô', '‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£', '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à'],
      opportunities: ['‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å', '‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô'],
      bestMonths: ['‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô', '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô'],
      colors: ['‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô', '‡∏ó‡∏≠‡∏á', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß']
    }
  }

  const handleReportSelect = (reportType: string) => {
    setSelectedReport(reportType)
    if (reportType === 'basic') {
      setShowPreview(true)
    } else {
      // For premium reports, show purchase flow
      alert(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${REPORT_TYPES[reportType as keyof typeof REPORT_TYPES].name}`)
    }
  }

  const generateBasicReport = async () => {
    setIsGenerating(true)
    // Simulate report generation
    await new Promise(resolve => setTimeout(resolve, 2000))
    setIsGenerating(false)
    setShowPreview(true)
  }

  const reportData = generateReportData()

  return (
    <div className="min-h-screen bg-black text-white p-4">
      <div className="max-w-6xl mx-auto space-y-8">
        {/* Header */}
        <div className="text-center space-y-4">
          <div className="text-6xl mb-4">üìã</div>
          <h1 className="text-4xl font-bold text-white">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</h1>
          <p className="text-xl text-gray-300 max-w-2xl mx-auto">
            ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô<br />
            ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
          </p>
        </div>

        {/* Profile Info */}
        <AppleCard className="p-6">
          <div className="flex items-center gap-4">
            <div className="text-4xl">üë§</div>
            <div>
              <h2 className="text-2xl font-bold text-white">{currentProfile.name}</h2>
              <p className="text-gray-400">
                ‡πÄ‡∏Å‡∏¥‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {new Date(currentProfile.birthDate).toLocaleDateString('th-TH', {
                  year: 'numeric',
                  month: 'long', 
                  day: 'numeric'
                })}
              </p>
            </div>
          </div>
        </AppleCard>

        {/* Report Types */}
        <div>
          <h2 className="text-3xl font-bold text-white mb-6 text-center">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {Object.entries(REPORT_TYPES).map(([key, report]) => (
              <AppleCard 
                key={key}
                className={`p-6 cursor-pointer hover:scale-105 transition-all relative ${
                  key === 'vip' ? 'ring-2 ring-purple-500/50' : ''
                }`}
                onClick={() => handleReportSelect(key)}
              >
                {key === 'vip' && (
                  <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                    <div className="bg-purple-500 text-white px-4 py-1 rounded-full text-sm font-medium">
                      ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
                    </div>
                  </div>
                )}

                <div className="text-center space-y-4">
                  <div className="text-5xl">{report.icon}</div>
                  
                  <div>
                    <h3 className="text-2xl font-bold text-white mb-2">{report.name}</h3>
                    <div 
                      className="text-2xl font-bold mb-3"
                      style={{ color: report.color }}
                    >
                      {report.price}
                    </div>
                    <p className="text-gray-400 text-sm mb-4">{report.description}</p>
                  </div>
                  
                  <div className="space-y-2">
                    {report.features.map((feature, index) => (
                      <div key={index} className="flex items-center gap-2 text-sm">
                        <div className="text-green-400">‚úì</div>
                        <span className="text-gray-300">{feature}</span>
                      </div>
                    ))}
                  </div>

                  <div className="pt-4">
                    <AppleButton
                      variant={key === 'basic' ? 'primary' : 'secondary'}
                      className="w-full"
                      style={{ 
                        backgroundColor: key !== 'basic' ? report.color : undefined,
                        borderColor: report.color 
                      }}
                    >
                      {key === 'basic' ? '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ü‡∏£‡∏µ' : '‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô'}
                    </AppleButton>
                  </div>
                </div>
              </AppleCard>
            ))}
          </div>
        </div>

        {/* Sample Reports */}
        <div>
          <h2 className="text-3xl font-bold text-white mb-6 text-center">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <AppleCard className="p-6">
              <div className="space-y-4">
                <div className="flex items-center gap-3">
                  <div className="text-3xl">üìä</div>
                  <h3 className="text-xl font-bold text-white">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h3>
                </div>
                
                <div className="bg-white/5 rounded-xl p-4 space-y-3">
                  <div className="flex justify-between">
                    <span className="text-gray-400">Life Path:</span>
                    <span className="text-white font-bold">{reportData.lifePath}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-400">Talent:</span>
                    <span className="text-white font-bold">{reportData.talent}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-400">Sun Number:</span>
                    <span className="text-white font-bold">{reportData.sunNumber}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-400">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô:</span>
                    <span className="text-green-400 font-bold">{reportData.compatibility}%</span>
                  </div>
                </div>

                <AppleButton
                  variant="primary"
                  className="w-full"
                  onClick={generateBasicReport}
                  disabled={isGenerating}
                >
                  {isGenerating ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...' : '‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á'}
                </AppleButton>
              </div>
            </AppleCard>

            <AppleCard className="p-6">
              <div className="space-y-4">
                <div className="flex items-center gap-3">
                  <div className="text-3xl">‚≠ê</div>
                  <h3 className="text-xl font-bold text-white">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°</h3>
                </div>
                
                <div className="bg-gradient-to-br from-amber-500/20 to-orange-500/20 border border-amber-500/30 rounded-xl p-4 space-y-3">
                  <div className="text-center mb-3">
                    <div className="text-amber-300 font-bold">‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ñ‡∏£‡∏ö 14 ‡∏™‡∏π‡∏ï‡∏£</div>
                  </div>
                  
                  <div className="grid grid-cols-2 gap-2 text-sm">
                    <div className="text-gray-300">‚Ä¢ Life Path</div>
                    <div className="text-gray-300">‚Ä¢ Expression</div>
                    <div className="text-gray-300">‚Ä¢ Personality</div>
                    <div className="text-gray-300">‚Ä¢ Heart's Desire</div>
                    <div className="text-gray-300">‚Ä¢ Personal Year</div>
                    <div className="text-gray-300">‚Ä¢ ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å 9 ‡∏™‡∏π‡∏ï‡∏£</div>
                  </div>
                  
                  <div className="text-center pt-2">
                    <div className="text-amber-300 text-sm">+ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å 15+ ‡∏´‡∏ô‡πâ‡∏≤</div>
                  </div>
                </div>

                <AppleButton
                  variant="secondary"
                  className="w-full"
                  style={{ backgroundColor: '#F59E0B', color: 'white' }}
                  onClick={() => handleReportSelect('premium')}
                >
                  ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏ø299
                </AppleButton>
              </div>
            </AppleCard>
          </div>
        </div>

        {/* Basic Report Preview Modal */}
        {showPreview && (
          <div className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4">
            <AppleCard className="max-w-4xl max-h-[90vh] overflow-y-auto">
              <div className="p-8 space-y-6">
                {/* Header */}
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-4">
                    <div className="text-6xl">üìä</div>
                    <div>
                      <h2 className="text-3xl font-bold text-white">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h2>
                      <p className="text-xl text-gray-400">{currentProfile.name}</p>
                    </div>
                  </div>
                  
                  <AppleButton
                    variant="ghost"
                    onClick={() => setShowPreview(false)}
                  >
                    ‚úï
                  </AppleButton>
                </div>

                {/* Summary */}
                <div className="bg-gradient-to-r from-blue-500/20 to-purple-500/20 border border-blue-500/30 rounded-2xl p-6">
                  <h3 className="text-2xl font-bold text-white mb-4">‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå</h3>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="text-center">
                      <div className="text-3xl font-bold text-blue-400">{reportData.lifePath}</div>
                      <div className="text-sm text-gray-300">Life Path</div>
                    </div>
                    <div className="text-center">
                      <div className="text-3xl font-bold text-purple-400">{reportData.talent}</div>
                      <div className="text-sm text-gray-300">Talent</div>
                    </div>
                    <div className="text-center">
                      <div className="text-3xl font-bold text-green-400">{reportData.compatibility}%</div>
                      <div className="text-sm text-gray-300">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô</div>
                    </div>
                  </div>
                </div>

                {/* Detailed Analysis */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="bg-white/5 rounded-2xl p-6">
                    <h3 className="text-xl font-bold text-white mb-4">‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á</h3>
                    <div className="space-y-3">
                      {reportData.opportunities.map((opportunity, index) => (
                        <div key={index} className="flex items-center gap-3">
                          <div className="text-green-400">‚úì</div>
                          <span className="text-gray-300">{opportunity}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  <div className="bg-white/5 rounded-2xl p-6">
                    <h3 className="text-xl font-bold text-white mb-4">‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤</h3>
                    <div className="space-y-3">
                      {reportData.challenges.map((challenge, index) => (
                        <div key={index} className="flex items-center gap-3">
                          <div className="text-yellow-400">‚ö†</div>
                          <span className="text-gray-300">{challenge}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                {/* Lucky Elements */}
                <div className="bg-white/5 rounded-2xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏î‡∏ß‡∏á</h3>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                      <h4 className="font-semibold text-white mb-2">‡πÄ‡∏•‡∏Ç‡∏ô‡∏≥‡πÇ‡∏ä‡∏Ñ</h4>
                      <div className="flex gap-2">
                        {reportData.luckyNumbers.map((num, index) => (
                          <div key={index} className="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold">
                            {num}
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="font-semibold text-white mb-2">‡∏™‡∏µ‡∏°‡∏á‡∏Ñ‡∏•</h4>
                      <div className="flex gap-2">
                        {reportData.colors.map((color, index) => (
                          <span key={index} className="px-3 py-1 bg-white/10 rounded-full text-sm text-gray-300">
                            {color}
                          </span>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="font-semibold text-white mb-2">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏î‡∏µ</h4>
                      <div className="space-y-1">
                        {reportData.bestMonths.map((month, index) => (
                          <div key={index} className="text-sm text-gray-300">{month}</div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>

                {/* Recommendations */}
                <div className="bg-gradient-to-r from-green-500/20 to-blue-500/20 border border-green-500/30 rounded-2xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h3>
                  <div className="space-y-3 text-gray-300">
                    <p>‚Ä¢ ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡∏ô‡∏≥‡πÇ‡∏ä‡∏Ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</p>
                    <p>‚Ä¢ ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô</p>
                    <p>‚Ä¢ ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏°‡∏á‡∏Ñ‡∏•‡πÉ‡∏ô‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ</p>
                    <p>‚Ä¢ ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ</p>
                  </div>
                </div>

                {/* Action Buttons */}
                <div className="flex gap-4 pt-4">
                  <AppleButton
                    variant="primary"
                    className="flex-1"
                    onClick={() => {
                      // TODO: Implement PDF download
                      alert('‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤')
                    }}
                  >
                    üìÑ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF
                  </AppleButton>
                  <AppleButton
                    variant="secondary"
                    className="flex-1"
                    onClick={() => handleReportSelect('premium')}
                  >
                    ‚≠ê ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°
                  </AppleButton>
                </div>
              </div>
            </AppleCard>
          </div>
        )}

        {/* Testimonials */}
        <div>
          <h2 className="text-3xl font-bold text-white mb-6 text-center">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {[
              {
                name: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡πÉ‡∏à',
                review: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏°‡∏≤‡∏Å ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô',
                rating: 5,
                type: 'Premium'
              },
              {
                name: '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ',
                review: '‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô VIP ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á',
                rating: 5,
                type: 'VIP'
              },
              {
                name: '‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡∏ä‡∏±‡∏¢',
                review: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ü‡∏£‡∏µ‡∏Å‡πá‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ',
                rating: 4,
                type: 'Basic'
              }
            ].map((testimonial, index) => (
              <AppleCard key={index} className="p-6">
                <div className="space-y-4">
                  <div className="flex items-center gap-3">
                    <div className="text-3xl">üë§</div>
                    <div>
                      <div className="font-bold text-white">{testimonial.name}</div>
                      <div className="text-sm text-gray-400">{testimonial.type} Report</div>
                    </div>
                  </div>
                  
                  <div className="flex gap-1">
                    {Array.from({ length: testimonial.rating }, (_, i) => (
                      <div key={i} className="text-yellow-400">‚≠ê</div>
                    ))}
                  </div>
                  
                  <p className="text-gray-300 text-sm italic">"{testimonial.review}"</p>
                </div>
              </AppleCard>
            ))}
          </div>
        </div>

        {/* Footer */}
        <div className="text-center py-8">
          <p className="text-gray-500 text-sm">
            ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á<br />
            ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
          </p>
        </div>
      </div>
    </div>
  )
}
